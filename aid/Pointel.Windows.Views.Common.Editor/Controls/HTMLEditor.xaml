<UserControl x:Class="Pointel.Windows.Views.Common.Editor.Controls.HTMLEditor"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:local="clr-namespace:Pointel.Windows.Views.Common.Editor.Controls"
			 xmlns:CustomControl="clr-namespace:Pointel.Windows.Views.Common.Editor.CustomControls"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" Unloaded="UserControl_Unloaded" Loaded="UserControl_Loaded" Name="htmleditor">
    <Grid>
        <Border Name="brdMain" BorderBrush="#D6D7D6" BorderThickness="1" Background="White">
            <Grid>
                <Grid.Resources>
                    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
                    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
                    <SolidColorBrush x:Key="HighlightedBrush" Color="#CEE7F7" />
                    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="#CCC" Offset="0.0" />
                                <GradientStop Color="#444" Offset="1.0" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="#FFF" Offset="0.0" />
                                <GradientStop Color="#CCC" Offset="1.0" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                    <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="#FFF" Offset="0.0" />
                                <GradientStop Color="#CCC" Offset="1.0" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                    <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
                        <GradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="#CCC" Offset="0.0" />
                                <GradientStop Color="#444" Offset="1.0" />
                            </GradientStopCollection>
                        </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                    <!-- Combobox styling start -->
                    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Border
	  x:Name="Border"
	  Grid.ColumnSpan="2"
	  Background="White"
	  BorderBrush="#ADAAAD"
	  BorderThickness="1" />
                            <Border
	  Grid.Column="0"
	  Margin="1"
	  Background="Transparent"
	  BorderThickness="0,0,0,0" />
                            <Path
	  x:Name="Arrow"
	  Grid.Column="1"
	  Fill="#737573"
	  HorizontalAlignment="Center"
	  VerticalAlignment="Center"
	  Data="M 0 0 L 4 4 L 8 0 Z" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
                        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="Transparent" />
                    </ControlTemplate>

                    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="Focusable" Value="false" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border
		  Name="Border"
		  Margin="1"
		  Background="White"
		  BorderBrush="#ADAAAD"
		  BorderThickness="1">
                                        <Path
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
			Fill="#737573"
			Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="Black"></Setter>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="Black"></Setter>
                                            <Setter TargetName="Border" Property="Background" Value="#F7F3F7" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="IsTabStop" Value="false" />
                        <Setter Property="Focusable" Value="false" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border Background="#F7F3F7" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="IsTabStop" Value="false" />
                        <Setter Property="Focusable" Value="false" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border Name="Border"
		  Background="White"
		  BorderBrush="#ADAAAD"
		  BorderThickness="1" />
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Thumb.IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#F7F3F7" />
                                        </Trigger>
                                        <Trigger Property="Thumb.IsDragging" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#F7F3F7" />
                                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- styled to change vertical and horizontal scrollbars start-->
                    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition  MaxHeight="18" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="18" />
                            </Grid.RowDefinitions>
                            <Border
	  Grid.RowSpan="3"
	  Background="#F0F0F0" />
                            <RepeatButton
	  Grid.Row="0"
	  Style="{StaticResource ScrollBarLineButton}"
	  Height="18"
	  Command="ScrollBar.LineUpCommand"
	  Content="M 0 4 L 8 4 L 4 0 Z" />
                            <Track
	  Name="PART_Track"
	  Grid.Row="1"
	  IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton
		  Style="{StaticResource ScrollBarPageButton}"
		  Command="ScrollBar.PageUpCommand" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb
		  Style="{StaticResource ScrollBarThumb}"
		  Margin="1,0,1,0"
		  Background="{StaticResource HorizontalNormalBrush}"
		  BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton
		  Style="{StaticResource ScrollBarPageButton}"
		  Command="ScrollBar.PageDownCommand" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <RepeatButton
	  Grid.Row="3"
	  Style="{StaticResource ScrollBarLineButton}"
	  Height="18"
	  Command="ScrollBar.LineDownCommand"
	  Content="M 0 0 L 4 4 L 8 0 Z" />
                        </Grid>
                    </ControlTemplate>

                    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MaxWidth="18" />
                                <ColumnDefinition Width="0.00001*" />
                                <ColumnDefinition MaxWidth="18" />
                            </Grid.ColumnDefinitions>
                            <Border
	  Grid.ColumnSpan="3"
	  Background="#F0F0F0" />
                            <RepeatButton
	  Grid.Column="0"
	  Style="{StaticResource ScrollBarLineButton}"
	  Width="18"
	  Command="ScrollBar.LineLeftCommand"
	  Content="M 4 0 L 4 8 L 0 4 Z" />
                            <Track
	  Name="PART_Track"
	  Grid.Column="1"
	  IsDirectionReversed="False">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton
		  Style="{StaticResource ScrollBarPageButton}"
		  Command="ScrollBar.PageLeftCommand" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb
		  Style="{StaticResource ScrollBarThumb}"
		  Margin="0,1,0,1"
		  Background="{StaticResource NormalBrush}"
		  BorderBrush="{StaticResource NormalBorderBrush}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton
		  Style="{StaticResource ScrollBarPageButton}"
		  Command="ScrollBar.PageRightCommand" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <RepeatButton
	  Grid.Column="3"
	  Style="{StaticResource ScrollBarLineButton}"
	  Width="18"
	  Command="ScrollBar.LineRightCommand"
	  Content="M 0 0 L 4 4 L 0 8 Z" />
                        </Grid>
                    </ControlTemplate>
                    <!-- styled to change vertical and horizontal scrollbars end-->

                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Foreground" Value="#737573" />
                        <Setter Property="Height" Value="20" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border x:Name="Bd"
					SnapsToDevicePixels="true"
					Background="{TemplateBinding Background}"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}"
					Padding="{TemplateBinding Padding}">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsHighlighted" Value="true">
                                            <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                            <Setter Property="FontSize" Value="12" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="true">
                                            <Setter Property="FontSize" Value="12" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>


                    <Style  TargetType="ComboBox">
                        <!--x:Key="{x:Type ComboBox}"-->
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBox">
                                    <Grid>
                                        <ToggleButton
            Name="ToggleButton"
            Template="{StaticResource ComboBoxToggleButton}"
            Grid.Column="2"
            Focusable="false"
            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
            ClickMode="Press">
                                        </ToggleButton>
                                        <ContentPresenter
            Name="ContentSite"
            IsHitTestVisible="False"
            Content="{TemplateBinding SelectionBoxItem}"
            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
            Margin="3,3,23,3"
            VerticalAlignment="Center"
            HorizontalAlignment="Left" />
                                        <TextBox UndoLimit="10" x:Name="PART_EditableTextBox"
            Style="{x:Null}" FlowDirection="LeftToRight" Width="210"
            HorizontalAlignment="Left" BorderBrush="Transparent"
            VerticalAlignment="Top" Height="25" HorizontalContentAlignment="Left" VerticalContentAlignment="Top"
            Margin="3,3,23,3"
            Focusable="True"
            Background="Transparent"
            Visibility="Hidden"
            IsReadOnly="{TemplateBinding IsReadOnly}" />
                                        <Popup
            Name="Popup"
            Placement="Bottom"
            IsOpen="{TemplateBinding IsDropDownOpen}"
            AllowsTransparency="True"
            Focusable="False"
            PopupAnimation="Slide">
                                            <Grid
              Name="DropDown"
              SnapsToDevicePixels="True"
              MinWidth="{TemplateBinding ActualWidth}"
              MaxHeight="{TemplateBinding MaxDropDownHeight}" Height="Auto">
                                                <Border
                x:Name="DropDownBorder"
                Background="{StaticResource WindowBackgroundBrush}"
                BorderThickness="1,0,1,1"
                BorderBrush="#ADAAAD" />
                                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                    <ScrollViewer.Resources>
                                                        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                                            <Setter Property="OverridesDefaultStyle" Value="true" />
                                                            <Style.Triggers>
                                                                <Trigger Property="Orientation" Value="Horizontal">
                                                                    <Setter Property="Width" Value="Auto" />
                                                                    <Setter Property="Height" Value="18" />
                                                                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                                                                </Trigger>
                                                                <Trigger Property="Orientation" Value="Vertical">
                                                                    <Setter Property="Width" Value="18" />
                                                                    <Setter Property="Height" Value="Auto" />
                                                                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ScrollViewer.Resources>
                                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                                </ScrollViewer>
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="PART_EditableTextBox" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                            <Setter TargetName="ToggleButton" Property="IsEnabled" Value="False" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="True">
                                            <Setter TargetName="ToggleButton" Property="IsEnabled" Value="True" />
                                        </Trigger>
                                        <Trigger Property="IsGrouping" Value="true">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                        </Trigger>
                                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0" />
                                        </Trigger>
                                        <Trigger Property="IsEditable" Value="true">
                                            <Setter Property="IsTabStop" Value="false" />
                                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"	Value="Visible" />
                                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="Contextmenu" TargetType="ContextMenu">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ContextMenu">
                                    <Border  Padding="0,3,0,3" BorderBrush="#ADAAAD" BorderThickness="1.25" Background="White" SnapsToDevicePixels="True">
                                        <ItemsPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <ContextMenu x:Key="DefaultCopyContextmenu" Style="{StaticResource Contextmenu}">
                        <MenuItem Header="Cut  " Command="ApplicationCommands.Cut" />
                        <MenuItem Header="Copy  "  Command="ApplicationCommands.Copy" />
                        <MenuItem Header="Paste  " Command="ApplicationCommands.Paste" />
                    </ContextMenu>

                    <!-- Combobox styling end -->
                    <Style TargetType="{x:Type Button}" x:Key="formatTextStyle">
                        <Setter Property="FontFamily" Value="Palatino Linotype"></Setter>
                        <Setter Property="Width" Value="30"></Setter>
                        <Setter Property="FontSize" Value ="14"></Setter>
                        <Setter Property="CommandTarget" Value="{Binding ElementName=mainRTB}"></Setter>
                    </Style>
                    <Style TargetType="{x:Type Button}" x:Key="formatImageStyle">
                        <Setter Property="Width" Value="28"></Setter>
                        <Setter Property="CommandTarget" Value="{Binding ElementName=mainRTB}"></Setter>
                    </Style>
                    <Style TargetType="{x:Type ToggleButton}" x:Key="formatToggleImageStyle">
                        <Setter Property="Width" Value="30"></Setter>
                        <Setter Property="CommandTarget" Value="{Binding ElementName=mainRTB}"></Setter>
                    </Style>
                    <Style x:Key="ToggleContextMenu"			   TargetType="{x:Type ContextMenu}">
                        <Setter Property="Background"
					Value="#FFF" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ContextMenu}">
                                    <Border Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">
                                        <ItemsPresenter Margin="{TemplateBinding Padding}"
											SnapsToDevicePixels="true" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="{x:Type MenuItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                                <ContentPresenter Margin="{TemplateBinding Padding}"
													  ContentSource="Header"
													  RecognizesAccessKey="False" />

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Name="rowToolbar" Height="Auto" />
                    <RowDefinition Name="rowContent" Height="*"/>
                </Grid.RowDefinitions>
                <Border Name="toolBarTray" Margin="2" BorderBrush="#D6D7D6" BorderThickness="1" Background="White">
                    <StackPanel>
                        <ToolBar Name="tbHTMLControls1" Height="30" DockPanel.Dock="Top" ToolBarTray.IsLocked="True" Background="White" BorderBrush="#D6D7D6" BorderThickness="0.5" Visibility="{Binding ShoworHideHTMLControls}">
                            <Button Style="{StaticResource formatImageStyle}" Command="ApplicationCommands.Cut" ToolTip="Cut" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Cut.png"></Image>
                            </Button>
                            <Button Style="{StaticResource formatImageStyle}" Command="ApplicationCommands.Copy" ToolTip="Copy" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Copy.png"></Image>
                            </Button>
                            <Button Style="{StaticResource formatImageStyle}" Command="ApplicationCommands.Paste" ToolTip="Paste" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Paste.png"></Image>
                            </Button>
                            <Button Style="{StaticResource formatImageStyle}" Command="ApplicationCommands.Undo" ToolTip="Undo" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Undo.png"></Image>
                            </Button>
                            <Button Style="{StaticResource formatImageStyle}" Command="ApplicationCommands.Redo" ToolTip="Redo" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Redo.png"></Image>
                            </Button>
                            <ToggleButton Name="buttonBold" Style="{StaticResource formatToggleImageStyle}"  Command="EditingCommands.ToggleBold" ToolTip="Bold" Visibility="{Binding ShoworHideHTMLControls}">
                                <TextBlock FontSize="18" FontWeight="Bold" Width="Auto" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" Foreground="#007edf">B</TextBlock>
                            </ToggleButton>
                            <ToggleButton Name="buttonItalic" Style="{StaticResource formatToggleImageStyle}" Command="EditingCommands.ToggleItalic" ToolTip="Italic" Visibility="{Binding ShoworHideHTMLControls}">
                                <TextBlock FontSize="18" FontStyle="Italic" FontWeight="Bold" Width="20" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"  Foreground="#007edf">I</TextBlock>
                            </ToggleButton>
                            <ToggleButton Name="buttonUnderline" Style="{StaticResource formatToggleImageStyle}" Command="EditingCommands.ToggleUnderline" ToolTip="Underline" Visibility="{Binding ShoworHideHTMLControls}">
                                <TextBlock FontSize="18" TextDecorations="Underline" FontWeight="Bold" Width="20" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"  Foreground="#007edf">U</TextBlock>
                            </ToggleButton>
                            <Button Style="{StaticResource formatImageStyle}" Command="EditingCommands.AlignLeft" ToolTip="Align Left" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Left Alignment.png"></Image>
                            </Button>
                            <Button Style="{StaticResource formatImageStyle}" Command="EditingCommands.AlignCenter" ToolTip="Align Center" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Center Alignment.png"></Image>
                            </Button>
                            <Button Style="{StaticResource formatImageStyle}" Command="EditingCommands.AlignRight" ToolTip="Align Right" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Right Alignment.png"></Image>
                            </Button>
                            <Button Style="{StaticResource formatImageStyle}" Command="EditingCommands.AlignJustify" ToolTip="Align Justify" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Justify.png"></Image>
                            </Button>

                            <Button Style="{StaticResource formatImageStyle}" Command="EditingCommands.IncreaseFontSize" ToolTip="Grow Font" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Increase Font.png"></Image>
                            </Button>
                            <Button Style="{StaticResource formatImageStyle}" Command="EditingCommands.DecreaseFontSize" ToolTip="Shrink Font" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Decrease Font.png"></Image>
                            </Button>

                        </ToolBar>
                        <ToolBar Name="tbHTMLControls2" Height="32" DockPanel.Dock="Top" ToolBarTray.IsLocked="True" Background="White" BorderBrush="#D6D7D6" BorderThickness="0.5">
                            <ComboBox Name="cmbHTMLFormat" Width="Auto" Padding="5,0,5,0" SelectionChanged="cmbHTMLFormat_SelectionChanged">
                                <ComboBoxItem Content="Text"></ComboBoxItem>
                                <ComboBoxItem Content="HTML"></ComboBoxItem>
                            </ComboBox>


                            <ComboBox Name="cmbFontFamily" Width="Auto" MinWidth="75" Padding="5,0,5,0" SelectionChanged="cmbFontFamily_SelectionChanged" Visibility="{Binding ShoworHideHTMLControls}"/>
                            <ComboBox Name="cmbFontSize" Width="36" SelectionChanged="cmbFontSize_SelectionChanged" Visibility="{Binding ShoworHideHTMLControls}"/> <!--TextBoxBase.TextChanged="cmbFontSize_TextChanged"-->
                            <ToggleButton x:Name="ToggleFontColor" Style="{StaticResource formatToggleImageStyle}" ToolTip="Text Color" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Text Color.png"></Image>
                                <ToggleButton.ContextMenu>
                                    <ContextMenu x:Name="FontColorContextMenu" Style="{StaticResource ToggleContextMenu}">
                                        <local:ColorPicker x:Name="FontColorPicker" />
                                    </ContextMenu>
                                </ToggleButton.ContextMenu>
                            </ToggleButton>
                            <ToggleButton x:Name="ToggleLineColor" Style="{StaticResource formatToggleImageStyle}" ToolTip="Back Color" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Highlight Color.png"></Image>
                                <ToggleButton.ContextMenu>
                                    <ContextMenu x:Name="LineColorContextMenu" Style="{StaticResource ToggleContextMenu}">
                                        <local:ColorPicker x:Name="LineColorPicker" />
                                    </ContextMenu>
                                </ToggleButton.ContextMenu>
                            </ToggleButton>
                            <Button Width="32" ToolTip="Add Link" Name="btnInsertHLink" Click="btnInsertHLink_Click" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Add URL.png"></Image>
                            </Button>



                            <ToggleButton Name="btnSpellCheck" Style="{StaticResource formatToggleImageStyle}" ToolTip="Enable / Disable Spell Check" Click="btnSpellCheck_Click">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/SpellCheck.png"></Image>
                            </ToggleButton>
                            <Button Style="{StaticResource formatImageStyle}" Command="EditingCommands.IncreaseIndentation" ToolTip="Increase Indent" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Increase Indent.png"></Image>
                            </Button>
                            <Button Style="{StaticResource formatImageStyle}" Command="EditingCommands.DecreaseIndentation" ToolTip="Decrease Indent" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Decrease Indent.png"></Image>
                            </Button>
                            <!--<Button Style="{StaticResource formatImageStyle}" ToolTip="Subscript" Click="ToolStripButtonSubscript_Click" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Subscript.png"></Image>
                            </Button>
                            <Button Style="{StaticResource formatImageStyle}" ToolTip="Superscript" Click="ToolStripButtonSuperscript_Click" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Superscript.png"></Image>
                            </Button>-->

                            <Button Style="{StaticResource formatImageStyle}" Command="EditingCommands.ToggleBullets" ToolTip="Bullets" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Bulleting.png"></Image>
                            </Button>
                            <Button Style="{StaticResource formatImageStyle}" Command="EditingCommands.ToggleNumbering" ToolTip="Numbering" Visibility="{Binding ShoworHideHTMLControls}">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/New/Numbering.png"></Image>
                            </Button>

                            <Button Style="{StaticResource formatImageStyle}" ToolTip="Insert Table" Name="btnInsertTable" Click="btnInsertTable_Click" Visibility="Collapsed">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/table.png"></Image>
                            </Button>
                            <Button Style="{StaticResource formatImageStyle}" ToolTip="Add Image" Name="btnInsertImage" Click="btnInsertImage_Click" Visibility="Collapsed">
                                <Image Source="/Pointel.Windows.Views.Common.Editor;component/Images/Image.png"></Image>
                            </Button>
                        </ToolBar>
                    </StackPanel>
                </Border>
                <Border Name="brdMainRTB"  Grid.Row="1" Margin="2" BorderBrush="#D6D7D6" BorderThickness="1" 
						Background="White" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">

                    <CustomControl:EditorBox x:Name
											 ="mainRTB" IsDocumentEnabled="True" BorderThickness="0" 
						FocusVisualStyle="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" 
						  KeyboardNavigation.TabIndex="0" AcceptsTab="True" AcceptsReturn="True" 
							OneLineOnly="{Binding OneLineOnly, ElementName=me}" Background="White"
							   SelectionChanged="mainRTB_SelectionChanged" 
							   VerticalScrollBarVisibility="Auto" PreviewKeyDown="mainRTB_PreviewKeyDown"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" HorizontalScrollBarVisibility="Auto" MouseLeftButtonDown="mainRTB_MouseDown" MouseLeftButtonUp="mainRTB_MouseUp" MouseRightButtonUp="mainRTB_MouseRightButtonUp" MouseRightButtonDown="mainRTB_MouseRightButtonDown" Focusable="True" TextChanged="mainRTB_TextChanged" KeyUp="mainRTB_KeyUp" PreviewMouseRightButtonDown="mainRTB_PreviewMouseRightButtonDown"
                                            >
                        <CustomControl:EditorBox.Resources>
                            <Style TargetType="ScrollBar">
                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                <Setter Property="OverridesDefaultStyle" Value="true" />
                                <Style.Triggers>
                                    <Trigger Property="Orientation" Value="Vertical">
                                        <Setter Property="Width" Value="18" />
                                        <Setter Property="Height" Value="Auto" />
                                        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="{x:Type Paragraph}" TargetType="{x:Type Paragraph}">
                                <Setter Property="Block.Margin" Value="0" />
                            </Style>
                            <VisualBrush x:Key="WavyBrush" Viewbox="0,0,3,3" ViewboxUnits="Absolute" Viewport="0,-5,7,15" ViewportUnits="Absolute" TileMode="Tile">
                                <VisualBrush.Visual>
                                    <Path Data="M-0.2,1.13C1,0,2,2,3.2,0.8" Stroke="#FFFF0000" StrokeThickness="0.2" SnapsToDevicePixels="True" />
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </CustomControl:EditorBox.Resources>
                    </CustomControl:EditorBox>
                </Border>
            </Grid>
        </Border>
        <Popup Name="popupAddImage" Placement="Bottom" StaysOpen="False" AllowsTransparency="True" VerticalAlignment="Bottom">
        </Popup>
    </Grid>
</UserControl>
